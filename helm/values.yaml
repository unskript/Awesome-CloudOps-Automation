# Default values for awesome-runbooks.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: unskript/awesome-runbooks
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

# Flag to indicate whether to use stateful-set or not
useStatefulSet: true 

common:
  namespace: "awesome-ops"
  port: 8888
  labels: "app: awesome-runbooks"
  initialDelaySeconds: 5
  periodSeconds: 30
  successThreshold: 3
  timeoutSeconds: 15
  terminationGracePeriodSeconds: 30

# Persistence 
persistence:
  enabled: true
  name: "awesome-runbooks-pvc"
  storageClassName: ""
  accessModes:
    - ReadWriteOnce 
  size: 1Gi
  annotations: {}
  mountPath: /unskript
  subPath: ""
  volumeClaimTemplate:
    selector: {} 
    requests: {}
    dataSource: {}


replicaSet:
  podManagementPolicy: Parallel

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8888

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
     cpu: "1.0"
     memory: "400Mi"
  requests:
     cpu: "1.0"
     memory: "400Mi"


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
