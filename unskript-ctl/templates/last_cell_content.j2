from unskript.legos.utils import CheckOutput, CheckOutputStatus
global w 

try:
    if 'w' in globals():
        if w.check_run:
            for id,output in w.check_output.items():
                output = json.loads(output)
                output['id'] = id
                print(json.dumps(output))
            # Lets check if we have errored_checks or timeout_checks
            # exists, if yes then lets dump the output 
            if hasattr(w, 'check_uuid_entry_function_map'):
                if hasattr(w, 'timeout_checks') and len(w.timeout_checks):
                    for name, err_msg in w.timeout_checks.items():
                        _id = w.check_uuid_entry_function_map.get(name)
                        print(json.dumps({
                            "status": 3,
                            "objects": None,
                            "error": err_msg,
                            "id": str(_id)
                        }))
                if hasattr(w, 'errored_checks') and len(w.errored_checks):
                    for name, err_msg in w.errored_checks.items():
                        _id = w.check_uuid_entry_function_map.get(name)
                        print(json.dumps({
                            "status": 3,
                            "objects": None,
                            "error": err_msg,
                            "id": str(_id)
                        }))
        else:
            print(json.dumps("Not a check run"))
    else:
        print(json.dumps("ERROR: Internal Error, Workflow is missing"))
except Exception as e:
    print(f"Internal error {{e}}")