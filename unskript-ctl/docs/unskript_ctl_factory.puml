@startuml
class GlobalConfig {
    enable_runbooks: bool
}
class CheckArguments {
    global_args: dict
}
class Check {
    params: CheckArguments()
    run(check: list[str], credential: dict, config_file: str)
}
class ChecksRunner extends RunnerInterface {
    check: Check
    run(check: list[str], credential: dict, config_file: str)
    run_checks_by_name(check_name: list[str], credential: dict, config_file: str)
}

class Notification {
    enable: bool
    verbose: bool
    provider: str
    Slack: SlackNotification()
    Email: EmailNotification()
}
class Job {
    name: str
    notify: bool
    enable: bool
    checks: list
    suites: list
    connector_types: list
    custom_scripts: list
}
class Scheduler {
    enable: bool
    cadence: str
    job_name: str
}
class UnskriptConfig {
    version: str
    Global: GlobalConfig
    ChecksArgs: CheckArguments
    Checks: list[Checks]
    Credential: list[Credential]
    Notification: Notification
    Jobs: list[Job]
    Scheduler: list[Scheduler]
}
UnskriptConfig --> GlobalConfig
UnskriptConfig --> Check
Check o-- CheckArguments
ChecksRunner <|-- Check
UnskriptConfig --> Credential
UnskriptConfig --> Notification
UnskriptConfig --> Job
UnskriptConfig --> Scheduler
Notification o-- NotificationEmail
Notification o-- NotificationSlack
@enduml

